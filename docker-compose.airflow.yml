name: airflow
volumes:
  airflow-db:

networks:
  dataops-assistant-net:
    external: true

x-airflow-common: &airflow-common
  image: apache/airflow:3.1.0
  environment:
    # --- Built-in admin user bootstrap (used by airflow-init only) ---
    _AIRFLOW_WWW_USER_USERNAME: admin
    _AIRFLOW_WWW_USER_PASSWORD: admin

    # --- Airflow core ---
    AIRFLOW__CORE__EXECUTOR: LocalExecutor
    AIRFLOW__CORE__LOAD_EXAMPLES: "false"
    AIRFLOW__CORE__EXECUTION_API_SERVER_URL: http://airflow-api-server:8080/execution
    AIRFLOW__CORE__SECRET_KEY: "one-shared-secret-key-keep-this-long-and-random"

    # --- Simple auth manager (for development/testing only) ---
    AIRFLOW__CORE__SIMPLE_AUTH_MANAGER_ALL_ADMINS: "True"

    # --- Airflow API ---
    AIRFLOW__API__SECRET_KEY: "one-shared-secret-key-keep-this-long-and-random"
    AIRFLOW__API_AUTH__JWT_SECRET: "one-shared-secret-key-keep-this-long-and-random"

    # --- Airflow metadata DB (separate from your app DB) ---
    AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@airflow-postgres:5432/airflow

    # --- Enable Airflow SDK / API in 3.1 ---
    AIRFLOW__SDK__ENABLED: "true"
    AIRFLOW__SDK__JWT_ALGORITHM: "HS256"

    # --- App DB connection (available to tasks) ---
    AIRFLOW_CONN_DATAOPS_ASSISTANT: http://dataops-assistant:80

  user: "${AIRFLOW_UID:-50000}:${AIRFLOW_GID:-0}"

  volumes:
    - ./airflow/dags:/opt/airflow/dags
    - ./airflow/logs:/opt/airflow/logs
    - ./airflow/plugins:/opt/airflow/plugins
    - ./airflow/config:/opt/airflow/config
    - /var/run/docker.sock:/var/run/docker.sock
    - /tmp:/tmp
  depends_on:
    airflow-postgres:
      condition: service_healthy
  networks:
    - dataops-assistant-net

services:
  # ---------------- App Postgres (for your ETL/data) ----------------
  airflow-postgres:
    image: postgres:15-alpine
    ports:
      - "5433:5432"
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U airflow -d airflow"]
      interval: 5s
      timeout: 5s
      retries: 30
    volumes:
      - airflow-db:/var/lib/postgresql/data
    networks:
      - dataops-assistant-net

  # ---------------- One-time DB init & user ----------------
  airflow-init:
    <<: *airflow-common
    entrypoint: /bin/bash
    command:
      - -lc
      - |
        set -e
        airflow db migrate
        echo "Airflow init done."
    restart: "no"

  # ---------------- Airflow services ----------------
  airflow-api-server:
    <<: *airflow-common
    container_name: airflow-api-server
    command: api-server
    ports:
      - "8082:8080"
    restart: unless-stopped

  airflow-scheduler:
    <<: *airflow-common
    container_name: airflow-scheduler
    command: scheduler
    restart: unless-stopped

  dag-processor:
    <<: *airflow-common
    container_name: airflow-dag-processor
    command: dag-processor
    restart: unless-stopped
